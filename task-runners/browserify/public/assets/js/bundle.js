(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
"use strict";function rand(r,t){return r*=1e3,t*=1e3,Math.floor(Math.random()*(t-r)+r)}module.exports=rand;

},{}],3:[function(require,module,exports){
"use strict";var rand=require("./random");function send(e){return new Promise(function(r,n){setTimeout(function(){"string"!=typeof e?n(new Error("A mensagem precisa ser uma string.")):r(e)},rand(1,3))})}module.exports=send;

},{"./random":2}],4:[function(require,module,exports){
"use strict";require("./assets/css/main.css");var send=require("./assets/js/send");function teste(){console.log("Hello World")}send("Frase 1").then(function(s){return console.log(s)}).catch(function(s){return console.log(s)}),teste();var pessoa={nome:"Lucas",sobrenome:"Alves"};console.log(pessoa);

},{"./assets/css/main.css":1,"./assets/js/send":3}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYXNzZXRzL2Nzcy9tYWluLmNzcyIsInNyYy9hc3NldHMvanMvcmFuZG9tLmpzIiwic3JjL2Fzc2V0cy9qcy9zZW5kLmpzIiwic3JjL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0EsYUNGQSxTQUFTLEtBQUssRUFBSyxHQUdmLE9BRkEsR0FBTSxJQUNOLEdBQU0sSUFDQyxLQUFLLE1BQU0sS0FBSyxVQUFZLEVBQU0sR0FBTyxHQUdwRCxPQUFPLFFBQVU7OzthQ05qQixJQUFNLEtBQU8sUUFBUSxZQUVyQixTQUFTLEtBQUssR0FDVixPQUFPLElBQUksUUFBUSxTQUFDLEVBQVMsR0FDekIsV0FBVyxXQUNXLGlCQUFSLEVBQ04sRUFDSSxJQUFJLE1BQU0sdUNBR2QsRUFBUSxJQUViLEtBQUssRUFBRyxNQUluQixPQUFPLFFBQVU7OzthQ2hCakIsUUFBUSx5QkFDUixJQUFNLEtBQU8sUUFBUSxvQkFNckIsU0FBUyxRQUNMLFFBQVEsSUFBSSxlQUxoQixLQUFLLFdBQ0EsS0FBSyxTQUFBLEdBQUssT0FBSSxRQUFRLElBQUksS0FEL0IsTUFFVyxTQUFBLEdBQUcsT0FBSSxRQUFRLElBQUksS0FNOUIsUUFFQSxJQUFNLE9BQVMsQ0FDWCxLQUFNLFFBQ04sVUFBVyxTQUdmLFFBQVEsSUFBSSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIlxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW0xaGFXNHVZM056SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUlpTENKbWFXeGxJam9pUXpwY1hGVnpaWEp6WEZ4TWRXTmhjMXhjUkdWemEzUnZjRnhjWlhOMGRXUnZYRnhxWVhaaGMyTnlhWEIwWEZ4bWFYaGhZMkZ2WEZ4aWNtOTNjMlZ5YVdaNVhGeHpjbU5jWEdGemMyVjBjMXhjWTNOelhGeHRZV2x1TG1OemN5SjkiLCJmdW5jdGlvbiByYW5kKG1pbiwgbWF4KSB7XHJcbiAgICBtaW4qPSAxMDAwO1xyXG4gICAgbWF4Kj0gMTAwMDtcclxuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcmFuZCIsImNvbnN0IHJhbmQgPSByZXF1aXJlKFwiLi9yYW5kb21cIik7XHJcblxyXG5mdW5jdGlvbiBzZW5kKG1zZykge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgaWYodHlwZW9mIG1zZyAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KFxyXG4gICAgICAgICAgICAgICAgICAgIG5ldyBFcnJvcihcIkEgbWVuc2FnZW0gcHJlY2lzYSBzZXIgdW1hIHN0cmluZy5cIilcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKG1zZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCByYW5kKDEsIDMpKVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gc2VuZCIsInJlcXVpcmUoXCIuL2Fzc2V0cy9jc3MvbWFpbi5jc3NcIik7XHJcbmNvbnN0IHNlbmQgPSByZXF1aXJlKFwiLi9hc3NldHMvanMvc2VuZFwiKTtcclxuXHJcbnNlbmQoXCJGcmFzZSAxXCIpXHJcbiAgICAudGhlbih2YWx1ZSA9PiBjb25zb2xlLmxvZyh2YWx1ZSkpXHJcbiAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG5cclxuZnVuY3Rpb24gdGVzdGUoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkhlbGxvIFdvcmxkXCIpO1xyXG59XHJcblxyXG50ZXN0ZSgpO1xyXG5cclxuY29uc3QgcGVzc29hID0ge1xyXG4gICAgbm9tZTogXCJMdWNhc1wiLFxyXG4gICAgc29icmVub21lOiBcIkFsdmVzXCIsXHJcbn07XHJcblxyXG5jb25zb2xlLmxvZyhwZXNzb2EpO1xyXG5cclxuIl19
